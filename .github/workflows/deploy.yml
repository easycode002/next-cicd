name: CI with nextjs

on:
  push: 
    branches: [main]
  pull_request:
    branches: [main]
  workflow_run:
    workflows: ["CI with Next.js"]
    types:
      - completed

env:
  TARGET_BRANCH: production

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      # for clone code from repo to ubuntu
      - name: Checkout repository
        uses: actions/checkout@v4

      # for setup node.js in ubuntu
      - name: Set up Node.JS for server github
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # install all dependencies, base on package.json
      - name: Install dependencies
        run: npm ci

      # install playwright
      - name: Install playwright
        run: npx playwright install

      # start storybook
      - name: Start Storybook
        run: npm run storybook -- --ci --port 6006 &

      # Wait for Storybook to be available
      - name: Wait for Storybook to be available
        run: npx wait-on http://127.0.0.1:6006

      # Run coverage tests
      - name: Start coverage
        run: npm run test-storybook -- --coverage

      # Check coverage threshold
      - name: Check coverage threshold
        run: |
          COVERAGE=$(grep -o '"statements": [0-9.]*' ./coverage/coverage-summary.json | awk '{print $2}')
          echo "Test coverage is $COVERAGE%"
          if (( $(echo "$COVERAGE < 50.0" | bc -l) )); then
            echo "Test coverage ($COVERAGE%) is below the required threshold of 50%."
            exit 1
          else
            echo "Test coverage ($COVERAGE%) meets the required threshold."
          fi

      # Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

      # Stop Storybook
      - name: Stop Storybook
        run: kill $(lsof -t -i:6006)

  merge-to-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run'
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Check if target branch exists
        run: |
          if git show-ref --verify --quiet refs/heads/${{ env.TARGET_BRANCH }}; then
            echo "Branch '${{ env.TARGET_BRANCH }}' exists."
            git checkout ${{ env.TARGET_BRANCH }}
          else
            echo "Branch '${{ env.TARGET_BRANCH }}' does not exist. Creating a new branch."
            git checkout -b ${{ env.TARGET_BRANCH }}
      
      - name: Merge main into production
        run: |
          git merge main
          if [ $? -ne 0 ]; then
            echo "Merge failed, exiting."
            exit 1
          fi
          git push origin ${{ env.TARGET_BRANCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  